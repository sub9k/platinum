-- Command Run
local function runCmd(msg)
    game.Players:Chat(msg)
end

-- Track if BuildingTools have already been given
local bToolsGiven = false

-- Function to check if the player has BuildingTools
local function checkAndGiveBTools()
    if bToolsGiven then
        return true -- BuildingTools already given
    end

    -- Check if the player has the BuildingTools
    for _, tool in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
        if tool.Name == "BuildingTools" then
            bToolsGiven = true -- Mark as given if found
            return true
        end
    end

    -- Tool not found, give the tool
    runCmd(":btools me")
    print("BuildingTools were not present. They have been given.")
    bToolsGiven = true
    return true
end

-- Function to clear parts
local function clearParts(serverEndpoint)
    -- Create a table to store parts to be removed
    local partsToRemove = {}

    -- Iterate through all descendants of the workspace
    for _, obj in ipairs(workspace:GetDescendants()) do
        -- Check if the object is a BasePart, not locked, and not a Player's part
        if obj:IsA("BasePart") and not obj.Locked and not obj:FindFirstAncestorOfClass("Player") then
            table.insert(partsToRemove, obj) -- Add the part to the list
        end
    end

    -- Invoke the server once with all parts to be removed
    if #partsToRemove > 0 then
        local args = {
            [1] = "Remove",
            [2] = partsToRemove
        }

        -- Call the server to delete all parts in one go
        serverEndpoint:InvokeServer(unpack(args))
    end
end

-- Variables to track the "building off" state
local buildingOff = false
local newPartConnection

-- Function to monitor and delete parts as they are created
local function monitorNewParts(serverEndpoint)
    -- Disconnect any previous connection to avoid duplicates
    if newPartConnection then
        newPartConnection:Disconnect()
    end

    -- Connect to the DescendantAdded event
    newPartConnection = workspace.DescendantAdded:Connect(function(obj)
        -- Check if the object is a BasePart, not locked, and not a Player's part
        if obj:IsA("BasePart") and not obj.Locked and not obj:FindFirstAncestorOfClass("Player") then
            -- Remove the part immediately by invoking the server
            local args = {
                [1] = "Remove",
                [2] = { obj }
            }
            serverEndpoint:InvokeServer(unpack(args))
        end
    end)
end

-- Listen for chat messages
game:GetService("Players").LocalPlayer.Chatted:Connect(function(message)
    -- Check for .pclear command
    if message:lower() == ".pclear" then
        if not checkAndGiveBTools() then return end
        local serverEndpoint = game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("Folder"):WaitForChild("SyncAPI"):WaitForChild("ServerEndpoint")
        clearParts(serverEndpoint)  -- Run the clear parts function

    -- Check for .building off command
    elseif message:lower() == ".building off" then
        if not buildingOff then
            if not checkAndGiveBTools() then return end
            local serverEndpoint = game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("Folder"):WaitForChild("SyncAPI"):WaitForChild("ServerEndpoint")
            buildingOff = true  -- Enable "building off" mode
            monitorNewParts(serverEndpoint)   -- Start monitoring for new parts
            print("Building off mode is now active. Any new parts will be removed.")
        else
            print("Building off is already active.")
        end

    -- Check for .building on command
    elseif message:lower() == ".building on" then
        if buildingOff then
            if not checkAndGiveBTools() then return end
            local serverEndpoint = game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("Folder"):WaitForChild("SyncAPI"):WaitForChild("ServerEndpoint")
            buildingOff = false  -- Disable "building off" mode
            if newPartConnection then
                newPartConnection:Disconnect() -- Stop monitoring for new parts
                newPartConnection = nil
            end
            print("Building on mode is now active. New parts will not be automatically removed.")
        else
            print("Building on is already active.")
        end
    end
end)
