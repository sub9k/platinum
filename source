--[[
Platinum made by UNKNOWN
Loadstring: loadstring(game:HttpGet("https://raw.githubusercontent.com/sub9k/platinum/main/source"))()
LAST UPDATED 3/11/25
]]--





-- cmd run function
local function runCmd(msg)
    game.Players:Chat(msg)
end

local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

function Notify(title, msg, ...) 
    local args = {...}

    if args[1] then
        Notification:Notify(
            {Title = title, Description = msg},
            {OutlineColor = Color3.fromRGB(200, 200, 200),Time = 3, Type = "option"},
            {Callback = args[1]}
        )
    else
        Notification:Notify(
            {Title = title, Description = msg},
            {OutlineColor = Color3.fromRGB(200, 200, 200),Time = 3, Type = "default"}
        )
    end
end

wait(0.5)

if not _G.platloaded then
    _G.platloaded = false
end

if _G.platloaded then
    Notify("[üõ°Ô∏è] Platinum [üõ°Ô∏è]", "Platinum has already been loaded.")
    return
end

_G.platloaded = true

local plat = "[üõ°Ô∏è] Platinum [üõ°Ô∏è]"
Notify(plat, "Initialized.")

local commands = {
    [".cmds"] = "Views the concurrent commands for platinum.",
    [".pclear"] = "Clears all parts in the workspace.",
    [".resetpad"] = "Resets admin pad",
    [".getadmin"] = "Teleports to the admin pads then teleports you back to your original position.",
    [".antijail on"] = "Auotmatically Unjails you when jailed.",
    [".antijail off"] = "Disables anti-jail protection.",
    [".shutdown reason"] = "Crashes the server.",
    [".antifreeze on"] = "Automatically Unfreezes urself when frozen.",
    [".antifreeze off"] = "Disables anti-freeze protection.",
    [".building off"] = "Disables building.",
    [".building on"] = "Re-enables building."
}

local LocalPlayer = game.Players.LocalPlayer

local hrp = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

local BtoolsCheck = false

local function GiveBtools()
    if BtoolsCheck then
        return true
    end

    for _, tool in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
        if tool.Name == "BuildingTools" then
            BtoolsCheck = true
            return true
        end
    end

    runCmd(":btools me")
    BtoolsCheck = true
    return true
end

local function partclear(serverEndpoint)
    local clearpartlist = {}

    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") and not obj.Locked and not obj:FindFirstAncestorOfClass("Player") then
            table.insert(clearpartlist, obj)
        end
    end

    if #clearpartlist > 0 then
        local args = {
            [1] = "Remove",
            [2] = clearpartlist
        }

        serverEndpoint:InvokeServer(unpack(args))
    end
end

local buildingOff = false
local newPartConnection

local function checkparts(serverEndpoint)
    if newPartConnection then
        newPartConnection:Disconnect()
    end

    newPartConnection = workspace.DescendantAdded:Connect(function(obj)
        if obj:IsA("BasePart") and not obj.Locked and not obj:FindFirstAncestorOfClass("Player") then
            local args = {
                [1] = "Remove",
                [2] = { obj }
            }
            serverEndpoint:InvokeServer(unpack(args))
        end
    end)
end

game:GetService("Players").LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == ".pclear" then
        if not GiveBtools() then return end
        local serverEndpoint = game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("Folder"):WaitForChild("SyncAPI"):WaitForChild("ServerEndpoint")
        partclear(serverEndpoint)  --run pclear lel
        Notify(plat, "Cleared every part in the workspace..")
        runCmd(":setmessage [üõ°Ô∏è] Cleared every part in the workspace. [üõ°Ô∏è] | :wait 6 | :setmessage off")

    elseif message:lower() == ".building off" then
        if not buildingOff then
            if not GiveBtools() then return end
            local serverEndpoint = game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("Folder"):WaitForChild("SyncAPI"):WaitForChild("ServerEndpoint")
            buildingOff = true 
            checkparts(serverEndpoint)
            Notify(plat, "Succesfully disabled building.")
            runCmd(":setmessage [üõ°Ô∏è] Building has been turned off. [üõ°Ô∏è]")
            print("Building off mode is now active. Any new parts will be removed.")
        else
            print("Building off is already active.")
        end

    elseif message:lower() == ".resetpad" then
Notify(plat, "Resetting admin...")
pos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
wait(0.001)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(23,28,106)
wait(0.3)
fireclickdetector(game.Workspace.SecureParts.ResetPads.ClickDetector)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-6.5,28.3,106.9)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(14,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(10,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5.5,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10.3,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-14.5,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos

    elseif message:lower() == ".getadmin" then
Notify(plat, "Getting admin...")
pos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
wait(0.001)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-6.5,28.3,106.9)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(14,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(10,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5.5,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10.3,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-14.5,28.2,106.2)
wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos

local isAntiJailActive = false
local isUnjailing = false

elseif message:lower() == ".antijail on" then
local function monitorjailstatus()
    local heartbeatConnection
    heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function()
        if game.Workspace:FindFirstChild(LocalPlayer.Name .. "_ADONISJAIL") and not isUnjailing then
            isUnjailing = true
            runCmd(":free me")  -- unjail
            heartbeatConnection:Disconnect()
        end
    end)
end


    if not isAntiJailActive then
        isAntiJailActive = true
        monitorjailstatus()
        Notify(plat, "Anti-Jail has been enabled.")
        print("Anti-jail Monitoring enabled.")
    else
        print("Anti-jail Monitoring is already enabled.")
    end

elseif message:lower() == ".antijail off" then
    if isAntiJailActive then
        isAntiJailActive = false
        isUnjailing = false
        Notify(plat, "Anti-Jail has been disabled.")
        print("Anti-jail Monitoring disabled.")
    else
        print("Anti-jail Monitoring is already disabled.")
    end
    
    elseif message:lower():sub(1, 9) == ".shutdown" then 
        local reason = message:sub(11):gsub("^%s*(.-)%s*$", "%1")
        if reason == "" then reason = "No reason provided" end
        Notify(plat, "Crashing server..")
        runCmd(":makepart 590 | :settransparency 590 1 | :wait 0.1 | :movepart 590 exact 124921,412831824,12348 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :clonepart 590 590 | :wait 0.8 | :clearguis others true")
        runCmd(":chatnotifyc all 200,200,200                          üõ°Ô∏è Platinum üõ°Ô∏è ")
        runCmd(":chatnotifyc all 200,200,200 This server has been shutdown due to: | :chatnotifyc all 200,200,200 " .. reason .. " | :wait 0.3 | :setanchored 590 false")

    local antifreeze = false
    local isFrozen = false

    elseif message:lower() == ".antifreeze on" then
        local function monitorfreezep()
            local heartbeatConnection1
            heartbeatConnection1 = game:GetService("RunService").Heartbeat:Connect(function()
                if hrp.Anchored == true and not isFrozen then
                    runCmd(":thaw me")
                    isFrozen = true
                elseif hrp.Anchored == false then
                    isFrozen = false
                end
            end)
        end
    
        if not antifreeze then
            antifreeze = true
            monitorfreezep()
            Notify(plat, "Anti-Freeze has been enabled.")
            print("Anti-Freeze Monitoring enabled.")
        else
            print("Anti-Freeze Monitoring is already enabled.")
        end
    
    elseif message:lower() == ".antifreeze off" then

    if monitorfreezep then
        monitorfreezep = false
        local antifreeze = false
        Notify(plat, "Anti-Freeze has been disabled.")
        print("Anti-Freeze Monitoring disabled.")
    else
        print("Anti-Freeze Monitoring is already disabled.")
    end

    elseif message:lower() == ".cmds" then
    Notify(plat, "Printed commands. Press F9 to check console.")
    print("------------------------------------------------------------------")
    for command, description in pairs(commands) do
        print(command .. "  " .. description)
    print("------------------------------------------------------------------")
    end

    elseif message:lower() == ".building on" then
        if buildingOff then
            if not GiveBtools() then return end
            local serverEndpoint = game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("Folder"):WaitForChild("SyncAPI"):WaitForChild("ServerEndpoint")
            buildingOff = false
            if newPartConnection then
                newPartConnection:Disconnect()
                newPartConnection = nil
            end
            runCmd(":setmessage off")
            Notify(plat, "Building has been turned on.")
            print("Building on is now active. New parts will not be automatically removed.")
        else
            print("Building on is already active.")
        end
    end
end)
